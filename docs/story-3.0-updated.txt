### Story 3.0: Classification Settings Management

**Status:** Requires Refactoring (3-Tier Architecture)

**As a** team member
**I want to** configure classification parameters through a settings UI
**So that** I can optimize pre-filtering and LLM classification without code changes

**Context:**

Following approval of 3-tier progressive filtering architecture (Sprint Change Proposal 2025-10-16), this story requires UI refactoring to support layer-specific configuration. The backend/frontend split from V1 logic (single prefilter list) to 3-tier structure (Layer 1/2/3 sections) necessitates restructuring the settings schema and UI.

**Scope:** Enable user-configurable classification parameters organized by 3-tier progressive filtering layers (Layer 1: Domain Analysis, Layer 2: Operational Validation, Layer 3: LLM Classification)

**Acceptance Criteria:**

**AC1: Database Schema (UPDATED)**
- [ ] Restructure `classification_settings` table with layer-specific JSONB fields:
  - id (UUID, primary key)
  - layer1_rules (JSONB) - Domain patterns, TLD lists, industry keywords, URL exclusions
  - layer2_rules (JSONB) - Blog freshness threshold, required pages, tech stack signals
  - layer3_rules (JSONB) - LLM indicators, confidence thresholds (high/medium/low/reject bands), temperature
  - content_truncation_limit (integer, default 10000)
  - updated_at (timestamp)
- [ ] Migration to preserve existing V1 settings, map to new layer-specific structure
- [ ] GET /api/settings endpoint returns settings organized by layer
- [ ] PUT /api/settings endpoint updates layer-specific settings with validation
- [ ] Settings validation: regex patterns checked with safe-regex, temperature/confidence 0-1 range, threshold ordering validated

**AC2: Backend - Service Integration:**
- [ ] PreFilterService (Layer 1) refactored to load layer1_rules from database
- [ ] OperationalFilterService (Layer 2) loads layer2_rules from database
- [ ] LLMService (Layer 3) loads layer3_rules from database
- [ ] Settings cached in-memory with TTL, refreshed on PUT
- [ ] Fallback to hardcoded defaults if database unavailable

**AC3: Layer 1 Configuration UI (NEW)**
- [ ] TLD filtering lists section with commercial vs non-commercial TLD inputs
- [ ] Industry classification keywords textarea (one per line)
- [ ] URL pattern exclusions editor with add/remove functionality
- [ ] Target profile matching rules configuration
- [ ] Enable/disable toggles for each Layer 1 rule category

**AC4: Layer 2 Configuration UI (NEW)**
- [ ] Blog freshness threshold slider (30-180 days, default 90)
- [ ] Required company pages checklist (About/Team/Contact/Careers)
- [ ] Tech stack signal list editor (analytics tools, marketing platforms)
- [ ] Professional design indicator toggles (responsive design, SSL, mobile-friendly)
- [ ] Homepage-only scraping confirmation checkbox

**AC5: Layer 3 Configuration UI (UPDATED - was "LLM Parameters")**
- [ ] Content marketing sophistication indicators (multi-line textarea)
- [ ] SEO investment signals list editor
- [ ] Temperature slider (0-1, step 0.1, default 0.3)
- [ ] Content truncation limit input (1000-50000, default 10000)

**AC6: Confidence Band Configuration (NEW)**
- [ ] High confidence threshold slider (0-1, step 0.05, default 0.8)
- [ ] Medium confidence threshold slider (0-1, step 0.05, default 0.5)
- [ ] Auto-reject threshold slider (0-1, step 0.05, default 0.3)
- [ ] Visual band preview showing routing logic (high → approved, medium → manual review, low → manual review, <reject → rejected)
- [ ] Validation: high > medium > reject thresholds

**AC7: Manual Review Queue Settings (NEW)**
- [ ] Queue size limit input (default: unlimited, optional: set max queue size)
- [ ] Auto-review timeout input (optional: auto-approve after X days)
- [ ] Queue notification preferences (email/dashboard alerts)

**AC11: Form Sections Structure (UPDATED)**
- [ ] Settings page accessible from dashboard navigation ("Settings" link in header)
- [ ] Form divided into 5 sections:
  1. Layer 1: Domain Analysis Rules
  2. Layer 2: Operational Validation Rules
  3. Layer 3: LLM Classification Settings
  4. Confidence Band Configuration
  5. Manual Review Queue Settings
- [ ] Each section collapsible with expand/collapse functionality
- [ ] "Save Settings" button with optimistic UI update
- [ ] "Reset to Defaults" button with confirmation dialog
- [ ] Form validation: Invalid inputs show inline errors
- [ ] Success/error toast notifications on save

**Testing:**
- [ ] Unit tests: Settings service CRUD operations for layer-specific fields
- [ ] Integration tests: Services load and apply layer-specific settings correctly
- [ ] E2E test: Update layer settings via UI, create job, verify settings applied to each layer
- [ ] Test fallback behavior: Database unavailable → uses hardcoded defaults
- [ ] Test migration: V1 settings correctly mapped to layer-specific structure

**Effort Estimates:**
- Backend: 2 days (schema restructure + migration + API updates)
- Frontend: 2-3 days (UI restructuring for layer sections)
- Testing: 1 day (verify layer-specific configuration loads correctly)
- Total: 5-6 days

**Story Points:** 5
**Dependencies:** Story 2.5 complete (requires existing classification services)

**Note:** Original implementation complete (2025-10-16) based on V1 logic. Requires refactoring for 3-tier architecture (Week 14).